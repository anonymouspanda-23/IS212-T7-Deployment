# backend Deployment File

# Namespace for backend
---
apiVersion: v1
kind: Namespace
metadata:
  name: prod

# ServiceAccount for cluster
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spm-service-account
  namespace: prod

# SecretProvider for cluster
---
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: env
  namespace: prod
spec:
  provider: gke
  parameters:
    secrets: |
      - resourceName: "projects/PROJECT_ID/secrets/env/versions/1"
        path: ".env"

# Deployment for backend Application
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: prod
  labels:
    app: backend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-deployment
  template:
    metadata:
      name: backend-deployment
      labels:
        app: backend-deployment
    spec:
      serviceAccountName: spm-service-account
      containers:
        - name: backend-container
          image: LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/BACKEND_CONTAINER:SHORT_SHA
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3001
          command: ["sh", "-c", "cp environment/.env .env && npm run dev"]
          volumeMounts:
            - mountPath: "/app/environment"
              name: env
      volumes:
        - name: env
          csi:
            driver: secrets-store-gke.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: env
      restartPolicy: Always

# Service for backend Application
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: prod
  labels:
    app: backend-service
  annotations:
    cloud.google.com/backend-config: '{"default": "backend-healthcheck-config"}'
spec:
  selector:
    app: backend-deployment
  ports:
    - protocol: TCP
      port: 3001
      targetPort: 3001
  type: NodePort

# Ingress for backend Application.
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
  namespace: prod
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.allow-http: "true"
    kubernetes.io/ingress.regional-static-ip-name: " spm-gke-cluster-prod-ip "
spec:
  defaultBackend:
    service:
      name: backend-service
      port:
        number: 3001

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: backend-healthcheck-config
  namespace: prod
  labels:
    app: backend-service
spec:
  healthCheck:
    checkIntervalSec: 15
    port: 3001
    type: HTTP
    requestPath: /api/v1